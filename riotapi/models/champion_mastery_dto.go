package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*ChampionMasteryDto champion mastery dto

swagger:model ChampionMasteryDto
*/
type ChampionMasteryDto struct {

	/* champion Id

	Required: true
	*/
	ChampionID *int64 `json:"championId"`

	/* chest granted

	Required: true
	*/
	ChestGranted *bool `json:"chestGranted"`

	/* highest grade

	Required: true
	*/
	HighestGrade *string `json:"highestGrade"`
}

// Validate validates this champion mastery dto
func (m *ChampionMasteryDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChampionID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateChestGranted(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateHighestGrade(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ChampionMasteryDto) validateChampionID(formats strfmt.Registry) error {

	if err := validate.Required("championId", "body", m.ChampionID); err != nil {
		return err
	}

	return nil
}

func (m *ChampionMasteryDto) validateChestGranted(formats strfmt.Registry) error {

	if err := validate.Required("chestGranted", "body", m.ChestGranted); err != nil {
		return err
	}

	return nil
}

func (m *ChampionMasteryDto) validateHighestGrade(formats strfmt.Registry) error {

	if err := validate.Required("highestGrade", "body", m.HighestGrade); err != nil {
		return err
	}

	return nil
}
