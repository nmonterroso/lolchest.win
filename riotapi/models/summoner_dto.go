package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*SummonerDto summoner dto

swagger:model SummonerDto
*/
type SummonerDto struct {

	/* id

	Required: true
	*/
	ID *int64 `json:"id"`

	/* name

	Required: true
	*/
	Name *string `json:"name"`

	/* profile icon Id

	Required: true
	*/
	ProfileIconID *int32 `json:"profileIconId"`
}

// Validate validates this summoner dto
func (m *SummonerDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateProfileIconID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SummonerDto) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *SummonerDto) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *SummonerDto) validateProfileIconID(formats strfmt.Registry) error {

	if err := validate.Required("profileIconId", "body", m.ProfileIconID); err != nil {
		return err
	}

	return nil
}
